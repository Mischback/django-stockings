[tox]
envlist =
    py{36,37,38}-django{22,30}

skipsdist = true
skip_missing_interpreters = true

[testenv]
setenv =
    PYTHONDONTWRITEBYTECODE=1
deps =
    coverage
    django22: Django>2.2, <3.0
    django30: Django>3.0, <3.1
commands =
    coverage run --parallel tests/runtests.py -v 0

[testenv:django]
basepython = python3
deps =
    -r {toxinidir}/requirements/development.txt
envdir = {toxworkdir}/django
setenv =
    PYTHONDONTWRITEBYTECODE=1
skip_install = true
commands =
    django-admin {posargs:version} --settings=tests.util.settings_dev --pythonpath=./

[testenv:djangosuperuser]
basepython = {[testenv:django]basepython}
deps = {[testenv:django]deps}
envdir = {[testenv:django]envdir}
setenv =
    PYTHONDONTWRITEBYTECODE=1
    DJANGO_SUPERUSER_USERNAME=admin
    DJANGO_SUPERUSER_EMAIL=admin@root.local
    DJANGO_SUPERUSER_PASSWORD=foobar
skip_install = {[testenv:django]skip_install}
commands =
    django-admin createsuperuser --noinput --settings=tests.util.settings_dev --pythonpath=./

[testenv:util]
basepython = python3
deps =
    coverage
    pre-commit
envdir = {toxworkdir}/util
setenv =
    PYTHONDONTWRITEBYTECODE=1
skip_install = true
commands =
    {posargs:pre-commit run}

[testenv:sphinx]
basepython = {[testenv:util]basepython}
changedir = {toxinidir}/docs
deps =
    -r {toxinidir}/requirements/documentation.txt
envdir = {toxworkdir}/sphinx
setenv =
    PYTHONDONTWRITEBYTECODE=1
skip_install = true
whitelist_externals =
    make
commands =
    {posargs:make html}

[testenv:sphinx-srv]
basepython = {[testenv:sphinx]basepython}
changedir = {toxinidir}/docs/build/html
deps = {[testenv:sphinx]deps}
envdir = {[testenv:sphinx]envdir}
setenv = {[testenv:sphinx]setenv}
skip_install = {[testenv:sphinx]skip_install}
commands =
    python -m http.server {posargs:8082}

[testenv:testing]
basepython = {[testenv:django]basepython}
deps =
    {[testenv:django]deps}
    coverage
envdir = {toxworkdir}/testing
setenv = {[testenv:django]setenv}
skip_install = {[testenv:django]skip_install}
commands = coverage run --parallel tests/runtests.py {posargs}

################################################################################
# The following sections actually provide settings for various tools
################################################################################

# This sections sets the options for coverage collecting
[coverage:run]
branch = True
source =
    stockings
    tests
omit =
    */__init__.py
    */migrations/*
    */tests/util/*
    */tests/runtests.py

# This sections sets the options for coverage reporting
[coverage:report]
precision = 1
show_missing = True
fail_under = 95


# This section actually sets the options for flake8
[flake8]
exclude =
    .git,
    .tox,
    docs/source/conf.py,
    migrations,
    settings_dev.py,

# as per Django's Coding Style
# see https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/coding-style/
# When using 'black', max line length will be capped at 88.
max-line-length = 119

ignore =
    # as per Django's Coding Style
    W601,
    W503,  # line break before binary operator


# This section actually sets the options for isort
[isort]
# these settings are taken from Django's isort configuration
# see https://github.com/django/django/blob/2.0.2/setup.cfg
combine_as_imports = True
default_section = THIRDPARTY
include_trailing_comma = True
line_length = 79
multi_line_output = 5
not_skip = __init__.py

# project specific isort options
known_first_party = stockings
known_django = django
sections = FUTURE, STDLIB, DJANGO, THIRDPARTY, FIRSTPARTY, LOCALFOLDER
import_heading_stdlib = Python imports
import_heading_django = Django imports
import_heading_firstparty = app imports
import_heading_localfolder = app imports
import_heading_thirdparty = external imports
skip_glob =
    .tox,
    */migrations/*
    settings_dev.py
